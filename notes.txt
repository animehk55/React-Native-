for android version below 5 : 

https://stackoverflow.com/questions/31525431/getting-error-closed-twice-on-adb-reverse/41640115#41640115

You can also connect to the development server over Wi-Fi. You'll first need to install the app on your device
using a USB cable, but once that has been done you can debug wirelessly by following these instructions. You'll 
need your development machine's current IP address before proceeding.

You can find the IP address in System Preferences → Network.

Make sure your laptop and your phone are on the same Wi-Fi network. 
Open your React Native app on your device. You'll see a red screen with an error. 
This is OK. The following steps will fix that. Open the in-app Developer menu. Go to Dev Settings → Debug server 
host for device. Type in your machine's IP address and the port of the local dev server (e.g. 10.0.1.1:8081). 
Go back to the Developer menu and select Reload JS.

***********************************************************************************************************************
cmd : ipconfig /all

to view IP address

*********************************************************************************************************************
npm i eslint-config-rallycoding

{
    "extends": "rallycoding"
}
*********************************************************************************************************************
Whenever we want to pass a data from  a parent/root component to a child component, we use the props(property) 
system
*******************************************************************************************************************
class based component has a unique advantage over functional components called "life cycle methods", Life cycle 
methods are functions that will be placed on our class that will be automatially called at some point, one 
such life cycle methods is called "componentWillMount". So we define a method on a class specifically 
"componentWillMount" anytime that our component is to be rendered to the screen of our device, this method will
automatically be executed automatically be called for us.

 componentWillMount() {
        console.log("ComponentWillMount in Album List");
        debugger;
    }

automatically debugger will move done to the text debugger in console, and if we write this in console then it will 
show : 
        AlbumList {props: {…}, context: {…}, refs: {…}, updater: {…}, _reactInternalFiber: FiberNode, …}


*******************************************************************************************************************
componentWillMount is called instantaneous component is about to be placed on the screen of the mobal device, 
which makes it the fantastic location to start initiating some data loading process for application.

npm install --save axios
--> sole purpose of axios for us is make http request to fetch some data.







